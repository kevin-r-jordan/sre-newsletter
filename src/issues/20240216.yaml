---
issue_number:   51
release_date:   2024-2-16
is_latest:      true
status:         published       # draft or published

introduction: |
    Welcome back to the SRE Newsletter, everyone! I took a break from the world of DevOps / SRE to dive into the world of AppSec. But, I've returned with a less lopsided DevSecOps knowledge triangle.

links:
    - title:      "We Might Want to Regularly Keep Track of How Important Each Server Is"
      url:        "https://utcc.utoronto.ca/~cks/space/blog/sysadmin/TrackingMachineImportance"
      summary:    "This short post brought me back to the early days of my career when our server room was just a big locked closet. In the modern era of cloud computing and cattle over pets, it's important to remember that managing air conditioning and counting BTUs matter at some organizations."
    - title:      "Lessons From Our 8 Years Of Kubernetes In Production"
      url:        "https://medium.com/@.anders/learnings-from-our-8-years-of-kubernetes-in-production-two-major-cluster-crashes-ditching-self-0257c09d36cd"
      summary:    "A startup chose to invest early (too early?) into Kubernetes. After 8 years, a couple outages, and moving from self managed to AKS, they're glad they did."
    - title:      "Understanding Database Replication: A Practical Overview"
      url:        "https://medium.com/@atakanserbes/understanding-database-replication-a-practical-overview-dbe23344acc7"
      summary:    "Database replication is indispensable, ensuring data durability, high availability, and system scalability. This exploration delves into why replication is pivotal, various replication strategies, and their impact on system performance and consistency."
    - title:      "Rebuilding Netflix Video Processing Pipeline with Microservices"
      url:        "https://netflixtechblog.com/rebuilding-netflix-video-processing-pipeline-with-microservices-4e5e6310e359"
      summary:    "This is the first blog in a multi-part series on how Netflix rebuilt its video processing pipeline with microservices, so we can maintain our rapid pace of innovation and continuously improve the system for member streaming and studio operations. This introductory blog focuses on an overview of our journey."
    - title:      "PostgreSQL is Enough"
      url:        "https://gist.github.com/cpursley/c8fb81fe8a7e5df038158bdfe0f06dbb"
      summary:    "Want message queues? Use Postgres. Want scheduled jobs? Use Postgres. Want functions? Use Postgres. Postgres all the things!"